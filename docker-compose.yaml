services:
  avito-shop-service:
    build: .
    container_name: avito-shop-service
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=shop
      - DATABASE_HOST=db
      - SSL_MODE=disable
      - SERVER_PORT=8080
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
    restart: always

  db:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shop
    shm_size: "1024MB"
    command: >
      postgres -c max_connections=2000 -c shared_buffers=512MB
    volumes:
      # "./migrations" - путь к миграциям БД
      - ./migrations:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d shop'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

  test_db:
    image: postgres:16
    container_name: test_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shop_test
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
      - test_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d shop_test" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal
volumes:
  postgres_data:
  test_postgres_data:

networks:
  internal:
